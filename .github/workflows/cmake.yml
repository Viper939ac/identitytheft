name: CMake Build and Release

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install CMake
      uses: jwlawson/actions-setup-cmake@v1
      with:
        cmake-version: latest

    - name: Configure CMake
      run: cmake -S . -B build

    - name: Build
      run: cmake --build build --config Release

    - name: Archive binaries
      if: success()
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.os }}-binaries
        path: build/

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Download binaries
      uses: actions/download-artifact@v2
      with:
        name: ubuntu-latest-binaries
        path: ./binaries/ubuntu
    - uses: actions/download-artifact@v2
      with:
        name: macos-latest-binaries
        path: ./binaries/macos
    - uses: actions/download-artifact@v2
      with:
        name: windows-latest-binaries
        path: ./binaries/windows

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        release_name: Release ${{ github.run_number }}
        draft: false
        prerelease: false

    - name: Upload Release Assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./binaries/ubuntu
        asset_name: ubuntu-binaries
        asset_content_type: application/zip
    - uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./binaries/macos
        asset_name: macos-binaries
        asset_content_type: application/zip
    - uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./binaries/windows
        asset_name: windows-binaries
        asset_content_type: application/zip